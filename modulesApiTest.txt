db.createCollection('modules');

OrganizationModule = {
  _id: 'organizationModuleInstance1Id',
  data: {
    todos: [
      {
        name: 'Define business model',
        boardId: 'businessBoardId',
        categoryId: 'categoryId1',
      },
      {
        name: 'Research payment processors',
        boardId: 'businessBoardId',
        categoryId: 'categoryId1',
      },
      {
        name: 'Design landing wireframe',
        boardId: 'designBoardId',
        users: [
          { _id: "ryanId" },
        ],
        categoryId: 'categoryId1',
      },
      {
        name: 'Develop modules API',
        boardId: 'programmingBoardId',
        users: [
          { _id: 'dylanId' },
          { _id: 'joelId' },
          { _id: 'migueId' },
        ],
        categoryId: 'categoryId2',
      },
      {
        name: 'Release the MVP',
        boardId: 'generalBoardId',
        categoryId: 'categoryId2',
      },
      {
        name: 'Some super secret task',
        boardId: 'secretBoardId',
        visibleBy: [
          { userId: 'obamaId' },
          { boardId: 'General' },
        ],
        categoryId: 'categoryId2',
      }
    ],
    categories: [
      {
        _id: 'categoryId1',
        name: 'Lorem ipsum category'
      },
      {
        _id: 'categoryId2',
        name: 'Another great category'
      },
    ],
  },
};
//needs mongo 3.2 to run
//Get every todo in some board

JSON.stringify(db.modules.aggregate(
  [
    {
      $project: {
        todos: '$data.todos'
      }
    },
    {
      $project: {
        todos: {
          $filter: {
            input: '$todos',
            as: 'todo',
            cond: {
              $eq: ['$$todo.boardId', 'designBoardId']
            }
          }
        }
      }
    },
    {
      $match: {
        $or: [
          { 'todos.visibleBy': null },
          { 'todos.visibleBy.userId': '.' },
          { 'todos.visibleBy.boardId': { $in: ['General', '.'] } },
        ]
      }
    }
  ]
)._batch, null, 4);

//insert new todo
let moduleInstanceId = 'organizationModuleInstance1Id',
    collection = 'todos';

let todo = {
  name: 'Implement tests on the client',
  boardId: designBoardId,
  visibleBy: [
    { boardId: 'General' },
    { boardId: 'Design' },
  ],
};

db.modules.update(
  { _id: 'organizationModuleInstance1Id' },
  { $push: { 'database.todos': {
    name: 'Implement tests on the client',
    boardId: 'designBoardId',
    visibleBy: [
      { boardId: 'General' },
      { boardId: 'Design' },
    ],
  } } });

db.modules.update({ _id: 'organizationModuleInstance1Id' }, { $push: { 'data.todos': { name: 'Implement tests on the client', boardId: 'designBoardId', visibleBy: [ { boardId: 'General' }, { boardId: 'Design' } ], } } } );

// Get all categories and the todos from each one

DiamondAPI.subscribe('heyImMe123ImAnId', {
  collection: 'categories',
  condition: {

  },
  children: [
    {
      collection: 'todos',
      condition: {}
    }
  ]
}, (data) => {
  /* Do something with data */
});
